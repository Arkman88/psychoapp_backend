#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —á–µ—Ä–µ–∑ googletrans
–ù–µ —Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á–µ–π - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É!
"""

import os
import sys
import django
import asyncio
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(str(Path(__file__).resolve().parent.parent))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from authentication.models import Exercise
from asgiref.sync import sync_to_async


@sync_to_async
def get_exercises_without_translation():
    """–ü–æ–ª—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –±–µ–∑ –ø–µ—Ä–µ–≤–æ–¥–∞ (async-safe)"""
    return list(Exercise.objects.filter(name_ru=''))


@sync_to_async
def save_translation(exercise_id, translation):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ (async-safe)"""
    exercise = Exercise.objects.get(id=exercise_id)
    exercise.name_ru = translation
    exercise.save()


async def translate_exercises_simple():
    """–ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ googletrans"""
    
    try:
        from googletrans import Translator
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å googletrans –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install googletrans==4.0.0-rc1")
        sys.exit(1)
    
    translator = Translator()
    
    # –ü–æ–ª—É—á–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –±–µ–∑ –ø–µ—Ä–µ–≤–æ–¥–∞
    exercises = await get_exercises_without_translation()
    total = len(exercises)
    
    if total == 0:
        print("‚úÖ –í—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —É–∂–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã!")
        return
    
    print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ {total} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...")
    print(f"‚ö° –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π Google Translate\n")
    
    translated = 0
    errors = 0
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ –æ–¥–Ω–æ–º—É (Google Translate –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)
    for i, exercise in enumerate(exercises, 1):
        try:
            # –ü–µ—Ä–µ–≤–æ–¥
            result = translator.translate(exercise.name, src='en', dest='ru')
            translation = result.text
            
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ (async-safe)
            await save_translation(exercise.id, translation)
            
            translated += 1
            
            # –ü—Ä–æ–≥—Ä–µ—Å—Å
            percentage = (i / total) * 100
            print(f"[{i}/{total}] ({percentage:.1f}%) ‚úÖ {exercise.name[:40]:<40} ‚Üí {translation[:40]}")
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å Google
            if i % 10 == 0:
                await asyncio.sleep(1)
            else:
                await asyncio.sleep(0.2)
                
        except Exception as e:
            errors += 1
            print(f"[{i}/{total}] ‚ùå –û—à–∏–±–∫–∞: {exercise.name[:40]} - {str(e)[:50]}")
            await asyncio.sleep(2)  # –ë–æ–ª—å—à–µ –∑–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "="*70)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ï–†–ï–í–û–î–ê")
    print("="*70)
    print(f"–í—Å–µ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {total}")
    print(f"‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: {translated}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {errors}")
    print(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(translated / total * 100):.1f}%")
    print("="*70)


if __name__ == '__main__':
    asyncio.run(translate_exercises_simple())
