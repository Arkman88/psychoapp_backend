#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ fixture —Ñ–∞–π–ª–∞:
1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ UUID
2. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –ª–æ–∫–∞–ª—å–Ω–æ
3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º
"""

import json
import uuid
import os
import requests
import time
from pathlib import Path
from typing import Dict, List

# –ü—É—Ç–∏
BASE_DIR = Path(__file__).resolve().parent.parent
FIXTURES_PATH = BASE_DIR / 'authentication' / 'fixtures' / 'gym_exercises.json'
MEDIA_ROOT = BASE_DIR / 'media' / 'exercises'
OUTPUT_PATH = BASE_DIR / 'authentication' / 'fixtures' / 'gym_exercises_translated.json'

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
MEDIA_ROOT.mkdir(parents=True, exist_ok=True)


def generate_uuid() -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID"""
    return str(uuid.uuid4())


def download_image(url: str, exercise_id: str, image_num: int) -> str:
    """–°–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤–µ—Ä–Ω—É—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å"""
    try:
        # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
        exercise_dir = MEDIA_ROOT / exercise_id
        exercise_dir.mkdir(exist_ok=True)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        file_path = exercise_dir / f'{image_num}.jpg'
        with open(file_path, 'wb') as f:
            f.write(response.content)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è Django
        return f'/media/exercises/{exercise_id}/{image_num}.jpg'
    
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {url}: {e}")
        return url  # –í–µ—Ä–Ω—É—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL


def process_exercise(exercise: Dict, index: int, total: int) -> Dict:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è"""
    exercise_id = generate_uuid()
    fields = exercise['fields']
    name = fields.get('name', '<no-name>')
    
    print(f"\n[{index + 1}/{total}] {name}")
    
    # 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º UUID
    exercise['pk'] = exercise_id
    
    # 2. –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    print(f"  üñºÔ∏è  –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    if fields.get('image_url_main'):
        fields['image_url_main'] = download_image(
            fields['image_url_main'], 
            exercise_id, 
            0
        )
    
    if fields.get('image_url_secondary'):
        fields['image_url_secondary'] = download_image(
            fields['image_url_secondary'], 
            exercise_id, 
            1
        )
    
    # 3. –î–æ–±–∞–≤–ª—è–µ–º timestamps
    fields['created_at'] = '2025-10-13T12:00:00Z'
    fields['updated_at'] = '2025-10-13T12:00:00Z'
    
    print(f"  ‚úÖ –ì–æ—Ç–æ–≤–æ!")
    
    return exercise


def main():
    print("="*70)
    print("üåê –û–ë–ù–û–í–õ–ï–ù–ò–ï FIXTURES (UUID + –õ–û–ö–ê–õ–¨–ù–´–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø)")
    print("="*70)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON
    print(f"\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ {FIXTURES_PATH}...")
    with open(FIXTURES_PATH, 'r', encoding='utf-8') as f:
        exercises = json.load(f)
    
    total = len(exercises)
    print(f"‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ {total} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π")
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–µ–∂–∏–º
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:")
    print("  1) –í—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è")
    print("  2) –¢–µ—Å—Ç–æ–≤—ã–π (10 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π)")
    print("  3) –£–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    
    choice = input("\n–í—ã–±–æ—Ä [1/2/3]: ").strip()
    
    limit = None
    if choice == '2':
        limit = 10
    elif choice == '3':
        try:
            limit = int(input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: "))
        except Exception:
            print("–ù–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.")
            limit = None
    
    if limit:
        exercises = exercises[:limit]
        total = limit
    
    print(f"\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ {total} —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...\n")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    updated_exercises = []
    errors = 0
    
    for i, exercise in enumerate(exercises):
        try:
            updated = process_exercise(exercise, i, total)
            updated_exercises.append(updated)
            
            # –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10
            if (i + 1) % 10 == 0:
                percentage = ((i + 1) / total) * 100
                print(f"\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {i + 1}/{total} ({percentage:.1f}%)")
                
        except Exception as e:
            errors += 1
            print(f"  ‚ùå –û–®–ò–ë–ö–ê: {e}")
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
            updated_exercises.append(exercise)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ {OUTPUT_PATH}...")
    with open(OUTPUT_PATH, 'w', encoding='utf-8') as f:
        json.dump(updated_exercises, f, ensure_ascii=False, indent=2)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "="*70)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("="*70)
    print(f"–í—Å–µ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {total}")
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total - errors}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {errors}")
    print(f"üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {OUTPUT_PATH}")
    print(f"üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤: {MEDIA_ROOT}")
    print("="*70)
    
    print("\n‚ú® –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:")
    print(f"   python3 manage.py loaddata authentication/fixtures/gym_exercises_translated.json")


if __name__ == '__main__':
    main()